/*
 * Genome Nexus API
 * Genome Nexus Variant Annotation API
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.genome_nexus.client;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.genome_nexus.client.ExonRange;
import org.genome_nexus.client.PfamDomainRange;

/**
 * EnsemblTranscript
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-05-16T15:36:31.946-04:00")
public class EnsemblTranscript {
  @SerializedName("transcriptId")
  private String transcriptId = null;

  @SerializedName("geneId")
  private String geneId = null;

  @SerializedName("proteinId")
  private String proteinId = null;

  @SerializedName("proteinLength")
  private Integer proteinLength = null;

  @SerializedName("pfamDomains")
  private List<PfamDomainRange> pfamDomains = null;

  @SerializedName("exons")
  private List<ExonRange> exons = null;

  @SerializedName("hugoSymbols")
  private List<String> hugoSymbols = null;

  public EnsemblTranscript transcriptId(String transcriptId) {
    this.transcriptId = transcriptId;
    return this;
  }

   /**
   * Ensembl transcript id
   * @return transcriptId
  **/
  @ApiModelProperty(required = true, value = "Ensembl transcript id")
  public String getTranscriptId() {
    return transcriptId;
  }

  public void setTranscriptId(String transcriptId) {
    this.transcriptId = transcriptId;
  }

  public EnsemblTranscript geneId(String geneId) {
    this.geneId = geneId;
    return this;
  }

   /**
   * Ensembl gene id
   * @return geneId
  **/
  @ApiModelProperty(required = true, value = "Ensembl gene id")
  public String getGeneId() {
    return geneId;
  }

  public void setGeneId(String geneId) {
    this.geneId = geneId;
  }

  public EnsemblTranscript proteinId(String proteinId) {
    this.proteinId = proteinId;
    return this;
  }

   /**
   * Ensembl protein id
   * @return proteinId
  **/
  @ApiModelProperty(required = true, value = "Ensembl protein id")
  public String getProteinId() {
    return proteinId;
  }

  public void setProteinId(String proteinId) {
    this.proteinId = proteinId;
  }

  public EnsemblTranscript proteinLength(Integer proteinLength) {
    this.proteinLength = proteinLength;
    return this;
  }

   /**
   * Length of protein
   * @return proteinLength
  **/
  @ApiModelProperty(value = "Length of protein")
  public Integer getProteinLength() {
    return proteinLength;
  }

  public void setProteinLength(Integer proteinLength) {
    this.proteinLength = proteinLength;
  }

  public EnsemblTranscript pfamDomains(List<PfamDomainRange> pfamDomains) {
    this.pfamDomains = pfamDomains;
    return this;
  }

  public EnsemblTranscript addPfamDomainsItem(PfamDomainRange pfamDomainsItem) {
    if (this.pfamDomains == null) {
      this.pfamDomains = new ArrayList<PfamDomainRange>();
    }
    this.pfamDomains.add(pfamDomainsItem);
    return this;
  }

   /**
   * Pfam domains
   * @return pfamDomains
  **/
  @ApiModelProperty(value = "Pfam domains")
  public List<PfamDomainRange> getPfamDomains() {
    return pfamDomains;
  }

  public void setPfamDomains(List<PfamDomainRange> pfamDomains) {
    this.pfamDomains = pfamDomains;
  }

  public EnsemblTranscript exons(List<ExonRange> exons) {
    this.exons = exons;
    return this;
  }

  public EnsemblTranscript addExonsItem(ExonRange exonsItem) {
    if (this.exons == null) {
      this.exons = new ArrayList<ExonRange>();
    }
    this.exons.add(exonsItem);
    return this;
  }

   /**
   * Exon information
   * @return exons
  **/
  @ApiModelProperty(value = "Exon information")
  public List<ExonRange> getExons() {
    return exons;
  }

  public void setExons(List<ExonRange> exons) {
    this.exons = exons;
  }

  public EnsemblTranscript hugoSymbols(List<String> hugoSymbols) {
    this.hugoSymbols = hugoSymbols;
    return this;
  }

  public EnsemblTranscript addHugoSymbolsItem(String hugoSymbolsItem) {
    if (this.hugoSymbols == null) {
      this.hugoSymbols = new ArrayList<String>();
    }
    this.hugoSymbols.add(hugoSymbolsItem);
    return this;
  }

   /**
   * Hugo symbols
   * @return hugoSymbols
  **/
  @ApiModelProperty(value = "Hugo symbols")
  public List<String> getHugoSymbols() {
    return hugoSymbols;
  }

  public void setHugoSymbols(List<String> hugoSymbols) {
    this.hugoSymbols = hugoSymbols;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EnsemblTranscript ensemblTranscript = (EnsemblTranscript) o;
    return Objects.equals(this.transcriptId, ensemblTranscript.transcriptId) &&
        Objects.equals(this.geneId, ensemblTranscript.geneId) &&
        Objects.equals(this.proteinId, ensemblTranscript.proteinId) &&
        Objects.equals(this.proteinLength, ensemblTranscript.proteinLength) &&
        Objects.equals(this.pfamDomains, ensemblTranscript.pfamDomains) &&
        Objects.equals(this.exons, ensemblTranscript.exons) &&
        Objects.equals(this.hugoSymbols, ensemblTranscript.hugoSymbols);
  }

  @Override
  public int hashCode() {
    return Objects.hash(transcriptId, geneId, proteinId, proteinLength, pfamDomains, exons, hugoSymbols);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EnsemblTranscript {\n");
    
    sb.append("    transcriptId: ").append(toIndentedString(transcriptId)).append("\n");
    sb.append("    geneId: ").append(toIndentedString(geneId)).append("\n");
    sb.append("    proteinId: ").append(toIndentedString(proteinId)).append("\n");
    sb.append("    proteinLength: ").append(toIndentedString(proteinLength)).append("\n");
    sb.append("    pfamDomains: ").append(toIndentedString(pfamDomains)).append("\n");
    sb.append("    exons: ").append(toIndentedString(exons)).append("\n");
    sb.append("    hugoSymbols: ").append(toIndentedString(hugoSymbols)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

